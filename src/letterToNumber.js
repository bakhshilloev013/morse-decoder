const MORSE_TABLE = {
    '.-': 'a',
    '-...': 'b',
    '-.-.': 'c',
    '-..': 'd',
    '.': 'e',
    '..-.': 'f',
    '--.': 'g',
    '....': 'h',
    '..': 'i',
    '.---': 'j',
    '-.-': 'k',
    '.-..': 'l',
    '--': 'm',
    '-.': 'n',
    '---': 'o',
    '.--.': 'p',
    '--.-': 'q',
    '.-.': 'r',
    '...': 's',
    '-': 't',
    '..-': 'u',
    '...-': 'v',
    '.--': 'w',
    '-..-': 'x',
    '-.--': 'y',
    '--..': 'z',
    '.----': '1',
    '..---': '2',
    '...--': '3',
    '....-': '4',
    '.....': '5',
    '-....': '6',
    '--...': '7',
    '---..': '8',
    '----.': '9',
    '-----': '0',
};

/*
    Задача
Ваша задача — написать функцию, которая декодирует азбуку Морзе и возвращает строку. Напишите свое решение в src/index.js.

Строка ввода. Его длина кратна 10.

Каждая буква алфавита закодирована точками (.) и тире (-). 10 означает точку (.), 11 означает тире (-).
Длина каждой закодированной буквы равна 10.
Если длина закодированной буквы меньше 10, она дополняется 0.
Пробел в строке **********. Вывод: строка (декодированная). Пример: me -> m === -- === 0000001111, e === . === 0000000010 -> 00000011110000000010
*/

function decode(expr) {
    // write your solution here
    let arr = expr.split('');
    let res = arr.map((str) => {
        for (let key in MORSE_TABLE) {
            if (MORSE_TABLE[key] === str) {
                return key;
            } else if (str === ' ') {
                return '**********';
            }
        }
    }, '');

    res = res.map((str) => {
        if (str === '**********') {
            return '**********';
        }

        let newStr = '';
        for (let i = 0; i < str.length; i++) {
            if (str[i] === '.') {
                newStr += '10';
            } else if (str[i] === '-') {
                newStr += '11';
            }
        }

        if (newStr.length != 10) {
            newStr = newStr.split('');
            let num = 10 - newStr.length
            for (let i = 0; i < num; i++) {
                newStr.unshift('0');
            }
            return newStr.join('');
        } else {
            return newStr;
        }
    });
    return res.join('');
}

console.log(decode('hello world'));

module.exports = {
    decode,
};
